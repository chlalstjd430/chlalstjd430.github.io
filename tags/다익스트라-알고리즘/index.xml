<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>다익스트라 알고리즘 on cmstown</title>
    <link>https://chlalstjd430.github.io/tags/%EB%8B%A4%EC%9D%B5%EC%8A%A4%ED%8A%B8%EB%9D%BC-%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/</link>
    <description>Recent content in 다익스트라 알고리즘 on cmstown</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Sat, 25 Jan 2020 01:45:20 +0900</lastBuildDate>
    
        <atom:link href="https://chlalstjd430.github.io/tags/%EB%8B%A4%EC%9D%B5%EC%8A%A4%ED%8A%B8%EB%9D%BC-%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>[DesignPattern] Sigleton pattern(싱글톤 패턴)</title>
      <link>https://chlalstjd430.github.io/2020/06/06_sigleton_pattern/</link>
      <pubDate>Thu, 11 Jun 2020 21:51:02 +0900</pubDate>
      
      <guid>https://chlalstjd430.github.io/2020/06/06_sigleton_pattern/</guid>
      <description>Sigleton pattern(싱글톤 패턴) 이번에 학습할 디자인 패턴은 싱글톤 패턴 입니다. Sigleton pattern(싱글톤 패턴)이란? 위키에서는 다음과 같이 정의합니다.</description>
    </item>
    
    <item>
      <title>[DesignPattern] Strategy pattern(전략 패턴)</title>
      <link>https://chlalstjd430.github.io/2020/06/05_strategy_pattern/</link>
      <pubDate>Thu, 11 Jun 2020 21:16:48 +0900</pubDate>
      
      <guid>https://chlalstjd430.github.io/2020/06/05_strategy_pattern/</guid>
      <description>Strategy pattern(전략 패턴) 이번에 학습할 디자인 패턴은 전략 패턴 입니다. Strategy pattern(전략 패턴)이란? 위키에서는 다음과 같이 정의합니다. 전략 패</description>
    </item>
    
    <item>
      <title>[DesignPattern] Abstract factory pattern(추상 팩토리 패턴)</title>
      <link>https://chlalstjd430.github.io/2020/06/04_abstact_factory_pattern/</link>
      <pubDate>Mon, 08 Jun 2020 14:02:59 +0900</pubDate>
      
      <guid>https://chlalstjd430.github.io/2020/06/04_abstact_factory_pattern/</guid>
      <description>Abstract factory pattern(추상 팩토리 패턴) 이번에 학습할 디자인 패턴은 추상 팩토리 패턴 입니다. 추상 팩토리 패턴이란? 위키에서는 다음과 같이 정의합니다. 추상 팩</description>
    </item>
    
    <item>
      <title>[HTTP Method] PUT과 PATCH의 차이점</title>
      <link>https://chlalstjd430.github.io/2020/06/put_vs_patch/</link>
      <pubDate>Tue, 02 Jun 2020 18:04:02 +0900</pubDate>
      
      <guid>https://chlalstjd430.github.io/2020/06/put_vs_patch/</guid>
      <description>RESTful API를 설계할 때 내가 만난 대부분은 주로 &amp;ldquo;수정&amp;rdquo; 기능에 대헤 PUT 을 사용하게 됩니다. 그러나 수정할 때 무조건 PUT 을 이용하는 것을 옳지</description>
    </item>
    
    <item>
      <title>[DesignPattern] Factory method pattern(팩토리 메소드 패턴)</title>
      <link>https://chlalstjd430.github.io/2020/06/03_factory_method_pattern/</link>
      <pubDate>Tue, 02 Jun 2020 02:04:49 +0900</pubDate>
      
      <guid>https://chlalstjd430.github.io/2020/06/03_factory_method_pattern/</guid>
      <description>Factory method pattern(팩토리 메소드 패턴) 이번에 학습할 디자인 패턴은 &amp;ldquo;팩토리 메소드 패턴&amp;rdquo; 입니다. 팩토리 메소드 메서드 패턴이란</description>
    </item>
    
    <item>
      <title>[DesignPattern] Template Method Pattern(템플릿 메소드 패턴)</title>
      <link>https://chlalstjd430.github.io/2020/05/02_templete_method_pattern/</link>
      <pubDate>Tue, 26 May 2020 15:37:48 +0900</pubDate>
      
      <guid>https://chlalstjd430.github.io/2020/05/02_templete_method_pattern/</guid>
      <description>Template Method Pattern(템플릿 메소드 패턴) 이번에 학습할 디자인 패턴은 &amp;ldquo;템플릿 메소드 패턴&amp;rdquo; 입니다. 템플릿 메서드 패턴이란? 알고</description>
    </item>
    
    <item>
      <title>코디미상담 후기 - 백엔드 개발자를 꿈꾸는 초보 개발자에 대한 조언</title>
      <link>https://chlalstjd430.github.io/2020/05/%EC%A0%95%EB%B3%B4_002/</link>
      <pubDate>Tue, 26 May 2020 03:06:40 +0900</pubDate>
      
      <guid>https://chlalstjd430.github.io/2020/05/%EC%A0%95%EB%B3%B4_002/</guid>
      <description>코디미 상담 후기 - 백엔드 개발자를 꿈꾸는 초보 개발자에 대한 조언 최근 코덕이라는 이사이트를 애용하는데, 해당 사이트에서 코디미 라는 곳을 알게되었습니다. 코디</description>
    </item>
    
    <item>
      <title>AWS EC2를 이용하여 Spring Boot 배포하기(3)</title>
      <link>https://chlalstjd430.github.io/2020/05/aws_ec2_03/</link>
      <pubDate>Fri, 22 May 2020 16:46:31 +0900</pubDate>
      
      <guid>https://chlalstjd430.github.io/2020/05/aws_ec2_03/</guid>
      <description>AWS EC2를 이용하여 Spring Boot 배포하기(3) 안녕하세요! 오늘은 지난 포스팅에 이어서 서버에서 Spring Boot를 배포하는 과정을 안내해드리도록 하겠습니다. 우리는 github</description>
    </item>
    
    <item>
      <title>AWS EC2를 이용하여 Spring Boot 배포하기(2)</title>
      <link>https://chlalstjd430.github.io/2020/05/aws_ec2_02/</link>
      <pubDate>Fri, 22 May 2020 13:59:22 +0900</pubDate>
      
      <guid>https://chlalstjd430.github.io/2020/05/aws_ec2_02/</guid>
      <description>AWS EC2를 이용하여 Spring Boot 배포하기(2) - AWS EC2 서버 접속 오늘은 AWS EC2 서버에 접속하는 과정을 소개해드리도록 하겠습니다. 먼저 시작하기 전에 해당 글은 윈도우 를 이</description>
    </item>
    
    <item>
      <title>AWS EC2를 이용하여 Spring Boot 배포하기(1)</title>
      <link>https://chlalstjd430.github.io/2020/05/aws_ec2_01/</link>
      <pubDate>Fri, 22 May 2020 02:26:58 +0900</pubDate>
      
      <guid>https://chlalstjd430.github.io/2020/05/aws_ec2_01/</guid>
      <description>AWS EC2를 이용하여 Spring Boot 배포하기(1) 저는 지금까지 AWS EC2를 이용하여 여러번 서버를 배포해보았었는데요. 이번에 그 과정들을 간단하게 블로그에 담고자 글을</description>
    </item>
    
    <item>
      <title>[DesignPattern] Decorator Pattern(데코레이터 패턴)</title>
      <link>https://chlalstjd430.github.io/2020/05/01_decorator_pattern/</link>
      <pubDate>Mon, 18 May 2020 21:12:02 +0900</pubDate>
      
      <guid>https://chlalstjd430.github.io/2020/05/01_decorator_pattern/</guid>
      <description>DecoratorPattern(데코레이터 패턴) 데코레인터 패턴이란? 객체의 결합 을 통해 기능을 동적으로 유연하게 확장 할 수 있게 해주는 패턴 위의 한 문장</description>
    </item>
    
    <item>
      <title>프로그래머스 - [3차] 방금그곡</title>
      <link>https://chlalstjd430.github.io/2020/04/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4_022/</link>
      <pubDate>Fri, 10 Apr 2020 10:56:39 +0900</pubDate>
      
      <guid>https://chlalstjd430.github.io/2020/04/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4_022/</guid>
      <description>문제링크 사용언어 c++ 주의사항 방금그곡 서비스에서는 음악 제목, 재생이 시작되고 끝난 시각, 악보를 제공한다. 네오가 기억한 멜로디와 악보에 사용되는 음은 C, C#, D,</description>
    </item>
    
    <item>
      <title>프로그래머스 - 후보키</title>
      <link>https://chlalstjd430.github.io/2020/04/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4_021/</link>
      <pubDate>Thu, 09 Apr 2020 20:18:46 +0900</pubDate>
      
      <guid>https://chlalstjd430.github.io/2020/04/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4_021/</guid>
      <description>문제링크 사용언어 c++ 주의사항 비트마스킹을 이용하여 풀 수 있는 문제이다. 기본적인 비트연산자에 대하여 숙지하여야한다. dfs로도 풀 수 있긴하다. 관계 데이터</description>
    </item>
    
    <item>
      <title>프로그래머스 - N으로 표현</title>
      <link>https://chlalstjd430.github.io/2020/04/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4_020/</link>
      <pubDate>Tue, 07 Apr 2020 20:54:00 +0900</pubDate>
      
      <guid>https://chlalstjd430.github.io/2020/04/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4_020/</guid>
      <description>문제링크 사용언어 c++ 주의사항 최솟값이 8보다 크면 -1을 return 합니다. 문제풀이 해당 문제는 DP로 풀지못하여 DFS를 활용하였습니다. Count가 9이상이면</description>
    </item>
    
    <item>
      <title>프로그래머스 - [1차] 추석 트래픽</title>
      <link>https://chlalstjd430.github.io/2020/04/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4_019/</link>
      <pubDate>Sun, 05 Apr 2020 02:40:08 +0900</pubDate>
      
      <guid>https://chlalstjd430.github.io/2020/04/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4_019/</guid>
      <description>문제링크 사용언어 c++ 주의사항 double형으로 값들을 계산할 경우 부동소수점에 유의해야 한다. 문제풀이 해당 문제를 풀기위한 순서는 다음과 같다. lines</description>
    </item>
    
    <item>
      <title>프로그래머스 - [1차] 프렌즈4블록</title>
      <link>https://chlalstjd430.github.io/2020/03/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4_018/</link>
      <pubDate>Fri, 20 Mar 2020 15:11:44 +0900</pubDate>
      
      <guid>https://chlalstjd430.github.io/2020/03/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4_018/</guid>
      <description>문제링크 사용언어 c++ 주의사항 입력으로 판의 높이 m, 폭 n과 판의 배치 정보 board가 들어온다. 2 ≦ n, m ≦ 30 board는 길이 n인 문자열 m개의 배열로 주어진</description>
    </item>
    
    <item>
      <title>프로그래머스 - 짝지어 제거하기</title>
      <link>https://chlalstjd430.github.io/2020/03/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4_017/</link>
      <pubDate>Mon, 09 Mar 2020 11:39:26 +0900</pubDate>
      
      <guid>https://chlalstjd430.github.io/2020/03/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4_017/</guid>
      <description>문제링크 사용언어 c++ 주의사항 문자열의 길이 : 1,000,000이하의 자연수 문자열은 모두 소문자로 이루어져 있습니다. 문제풀이 처음에 for문을 계속 돌려</description>
    </item>
    
    <item>
      <title>프로그래머스 - 땅따먹기</title>
      <link>https://chlalstjd430.github.io/2020/03/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4_016/</link>
      <pubDate>Thu, 05 Mar 2020 15:23:47 +0900</pubDate>
      
      <guid>https://chlalstjd430.github.io/2020/03/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4_016/</guid>
      <description>문제링크 사용언어 c++ 주의사항 행의 개수 N : 100,000 이하의 자연수 열의 개수는 4개이고, 땅(land)은 2차원 배열로 주어집니다. 점수 : 100 이하의 자연수 문제풀이</description>
    </item>
    
    <item>
      <title>프로그래머스 - 다음 큰 숫자</title>
      <link>https://chlalstjd430.github.io/2020/03/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4_015/</link>
      <pubDate>Wed, 04 Mar 2020 23:08:54 +0900</pubDate>
      
      <guid>https://chlalstjd430.github.io/2020/03/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4_015/</guid>
      <description>문제링크 사용언어 c++ 주의사항 조건 1. n의 다음 큰 숫자는 n보다 큰 자연수 입니다. 조건 2. n의 다음 큰 숫자와 n은 2진수로 변환했을 때 1의 갯수가 같습니다. 조건 3.</description>
    </item>
    
    <item>
      <title>프로그래머스 - 가장 큰 정사각형 찾기</title>
      <link>https://chlalstjd430.github.io/2020/03/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4_014/</link>
      <pubDate>Sun, 01 Mar 2020 23:49:13 +0900</pubDate>
      
      <guid>https://chlalstjd430.github.io/2020/03/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4_014/</guid>
      <description>문제링크 사용언어 c++ 주의사항 DP를 적용하여 문제를 풀지않으면 시간 초과가 된다. 문제풀이 array[N][N] = (array[N-1][N], array[N][N-1], array[N-1][N-1]) 중 가장 작은 값 + 1 위의 점화식을 이용하여 문제를 풀면된다</description>
    </item>
    
  </channel>
</rss>
